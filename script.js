// lista p친 symbolerna
const symbols = ['游꼖', '游꼘', '游꼛', '游꼗', '游꼚', '游꼠', '游꼜', '游녬'];

// po칛ngen f칬r varje frukt
const fruitPoints = {
  '游꼖': 5,
  '游꼘': 10,
  '游꼛': 20,
  '游꼗': 30,
  '游꼚': 50,
  '游꼠': 70,
  '游꼜': 100,
  '游녬': 200
};

//po칛ngen man startar med
let currentScore = 0;
let totalScore = 0;

// en funktion f칬r att f친 en random frukt varje g친ng
function getRandomFruit() {
  // r칛knar "l칛ngden" p친 frukterna vilket i det h칛r fallet betyder m칛ngden frukter i listan f칬r att kunna f친 vilken som helst av dem alla
  const randomIndex = Math.floor(Math.random() * symbols.length);
  return symbols[randomIndex];
}

// funktion f칬r att snurra p친 alla 3 reels som i respons ger en random frukt per reel
function spinWheel() {
  const reels = document.querySelectorAll('.reel');
  reels.forEach(reel => {
    reel.textContent = getRandomFruit();
  });
}

// beskriver allt som ska h칛nda n칛r man trycker p친 spin knappen
document.getElementById('spin_button').addEventListener('click', function() {
  spinWheel();
   calculateScores(); 
     updateScoreDisplay(); // uppdaterar vad "Score" visar f칬r antal
});


// kalkulerar po칛ngen fr친n den senaste spinnen
function calculateScores(reelSymbols) {
  currentScore = 0; // Reset current score
  
  // loopar genom symbolerna i alla reels
  for (let symbol of reelSymbols) {
    // en if som checkar om fruitPoints har en symbol i sig
    if (fruitPoints.hasOwnProperty(symbol)) {
      // adderar frukternas v칛rde och l칛gger till po칛ngen till currentScore
      currentScore += fruitPoints[symbol];
    }
  }
};

function updateScoreDisplay() {
  document.getElementById('current_score').textContent = `Score: ${currentScore}`;
  document.getElementById('total_score').textContent = `Total score: ${totalScore}`;
}

document.getElementById('spin_button').addEventListener('click', function() {
  spinWheel(); 
  const reels = document.querySelectorAll('.reel');
  const reelSymbols = Array.from(reels).map(reel => reel.textContent.trim()); 
  calculateScores(reelSymbols); 
  totalScore += currentScore; 
  updateScoreDisplay(); 
});

updateScoreDisplay();

